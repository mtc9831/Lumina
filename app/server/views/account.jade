
// preset form values if we receive a userdata object //
- user = typeof(udata) != 'undefined' ? udata : { }
// store the userId on the client side in a hidden input field //
input(type='hidden', value= user._id)#userId

#account-form-container
	form( method="post")#account-form.form-horizontal.well.span6
		h1
		p#sub1.subheading Please tell us a little about yourself.
		hr
		fieldset
			#name-cg.control-group
				label.control-label(for='name-tf') Name
				.controls
					input#name-tf.input-xlarge(type='text', name='name', value= user.name)
			#email-cg.control-group
				label.control-label(for='email-tf') Email
				.controls
					input#email-tf.input-xlarge(type='text', name='email', value= user.email)
			#contact-cg.control-group
				label.control-label(for='contact-tf') Contact No
				.controls
					input#contact-tf.input-xlarge(type='text', name='contact', value= user.contactno)
			#clist-cg.control-group
				label.control-label(for='country-list') Location
				.controls
					select#country-list(name='country')
						each item in countries
							option(selected=item.name == user.country)= item.name
			#rlist-cg.control-group
				label.control-label(for='role-list') Role
				.controls
					select#role-list(name='role')
						each item in roles
							option(selected=item.name == user.role)= item.name
			#board-cg.control-group
				label.control-label(for='board-tf') Board / College / University
				.controls
					input#board-tf.input-xlarge(type='text', name='board', value= user.board)
			#standard-cg.control-group
				label.control-label(for='standard-tf') Standard
				.controls
					input#standard-tf.input-xlarge(type='text', name='standard', value= user.standard)
			hr
			p#sub2.subheading
			#user-cg.control-group
				label.control-label(for='user-tf') Username
				.controls
					input#user-tf.input-xlarge.disabled(type='text', name='user', value= user.user)
			#pass-cg.control-group
				label.control-label(for='pass-tf') Password
				.controls
					#thepwddiv.pwdwidgetdiv
						script(type='text/javascript').
							var pwdwidget = new PasswordWidget('thepwddiv','pass');
							pwdwidget.MakePWDWidget();
						noscript
							input#pass.input-xlarge(type='password', name='pass', value='')
			#agreement-rg.ccntrol-group
				.controls
				input(type='checkbox', name='agreement', id='agreement')
				|  I agree to
				a(href="/termsdoc")  terms and conditions
			.form-actions
				button(type='button')#account-form-btn1.btn
				button(type='submit')#account-form-btn2.btn

// display form errors in a custom modal window //

include modals/form-errors
